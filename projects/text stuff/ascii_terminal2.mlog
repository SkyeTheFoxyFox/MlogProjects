set MAX_CHAR_PER_LINE 29
set MAX_LINES 16
set CHAR_WIDTH 6
set CHAR_HEIGHT 11
set SCREEN_SIZE 176

packcolor FOREGROUND_COLOR 1 1 1 1
packcolor BACKGROUND_COLOR 0 0 0 1

op mul TOTAL_CHAR_COUNT MAX_CHAR_PER_LINE MAX_LINES

set currentY 0
set currentX 0

op mul charY currentY CHAR_HEIGHT
op add y1 charY 1
op add y2 charY 2
op add y3 charY 3
op add y4 charY 4
op add y5 charY 5
op add y6 charY 6
op add y7 charY 7
op add y8 charY 8
op add y9 charY 9
op add y10 charY 10

op mul charX currentX CHAR_WIDTH
op add x1 charX 1
op add x2 charX 2
op add x3 charX 3
op add x4 charX 4
op add x5 charX 5

draw col BACKGROUND_COLOR
draw rect 0 0 SCREEN_SIZE SCREEN_SIZE
draw col FOREGROUND_COLOR

TerminalLoop:
write false cell1 3
WaitLoop:
read startSignal cell1 3
jump WaitLoop notEqual startSignal true


read controlValue cell1 0
read input1 cell1 1
read input2 cell1 2


jump PrintChar equal controlValue 0
jump SetPos equal controlValue 1
#jump SetCol equal controlValue 2
jump ClearScreen equal controlValue 3
jump TerminalLoop always

SetPos:
	set currentX input1
	set currentY input2
	op mul charY currentY CHAR_HEIGHT
	op add y1 charY 1
	op add y2 charY 2
	op add y3 charY 3
	op add y4 charY 4
	op add y5 charY 5
	op add y6 charY 6
	op add y7 charY 7
	op add y8 charY 8
	op add y9 charY 9
	op add y10 charY 10

	op mul charX currentX CHAR_WIDTH
	op add x1 charX 1
	op add x2 charX 2
	op add x3 charX 3
	op add x4 charX 4
	op add x5 charX 5
jump TerminalLoop always

#SetCol:
#	set FOREGROUND_COLOR input1
#	set BACKGROUND_COLOR input2
#jump TerminalLoop always

ClearScreen:
	ClearMemset:
	write 0 bank1 i
	op add i i 1
	jump ClearMemset lessThan i TOTAL_CHAR_COUNT
	set i 0

	draw col BACKGROUND_COLOR
	draw rect 0 0 SCREEN_SIZE SCREEN_SIZE
	draw col FOREGROUND_COLOR
	drawflush display1

jump TerminalLoop always

PrintLoopStart:
op add lineOffset lineOffset 1

NewLineReset:
op mul index lineOffset MAX_CHAR_PER_LINE
op sub index i index
op mod index index TOTAL_CHAR_COUNT
op add index index TOTAL_CHAR_COUNT
op mod index index TOTAL_CHAR_COUNT
write 0 bank1 index
op add i i 1
jump NewLineReset lessThan i MAX_CHAR_PER_LINE
set i 0

set isPrintLoop true
set currentY 0
set currentX 0

op mul charY currentY CHAR_HEIGHT
op add y1 charY 1
op add y2 charY 2
op add y3 charY 3
op add y4 charY 4
op add y5 charY 5
op add y6 charY 6
op add y7 charY 7
op add y8 charY 8
op add y9 charY 9
op add y10 charY 10

op mul charX currentX CHAR_WIDTH
op add x1 charX 1
op add x2 charX 2
op add x3 charX 3
op add x4 charX 4
op add x5 charX 5

PrintLoop:
op mul index lineOffset MAX_CHAR_PER_LINE
op sub index i index
op mod index index TOTAL_CHAR_COUNT
op add index index TOTAL_CHAR_COUNT
op mod index index TOTAL_CHAR_COUNT

read input1 bank1 index

PrintChar:

jump SkipForPrintLoop equal isPrintLoop true
op mul i MAX_CHAR_PER_LINE currentY
op add i i currentX
op mul index lineOffset MAX_CHAR_PER_LINE
op sub index i index
op mod index index TOTAL_CHAR_COUNT
op add index index TOTAL_CHAR_COUNT
op mod index index TOTAL_CHAR_COUNT
write input1 bank1 index
set i 0
SkipForPrintLoop:

op mul charY currentY CHAR_HEIGHT

draw col BACKGROUND_COLOR
draw rect charX charY CHAR_WIDTH CHAR_HEIGHT
draw col FOREGROUND_COLOR

jump End greaterThanEq input1 128

op add @counter @counter input1

jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump Tab always
jump NewLine always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump End always
jump Exclamation always
jump Quote always
jump Hash always
jump Dollar always
jump Percent always
jump And always
jump Apostrophe always
jump OParen always
jump CParen always
jump Asterix always
jump Plus always
jump Comma always
jump Minus always
jump Period always
jump BSlash always
jump Zero always
jump One always
jump Two always
jump Three always
jump Four always
jump Five always
jump Six always
jump Seven always
jump Eight always
jump Nine always
jump Colon always
jump SemiColon always
jump GreaterThan always
jump Equal always
jump LessThan always
jump Question always
jump At always
jump A always
jump B always
jump C always
jump D always
jump E always
jump F always
jump G always
jump H always
jump I always
jump J always
jump K always
jump L always
jump M always
jump N always
jump O always
jump P always
jump Q always
jump R always
jump S always
jump T always
jump U always
jump V always
jump W always
jump X always
jump Y always
jump Z always
jump OBracket always
jump FSlash always
jump CBracket always
jump Caret always
jump UScore always
jump BTick always
jump a always
jump b always
jump c always
jump d always
jump e always
jump f always
jump g always
jump h always
jump i always
jump j always
jump k always
jump l always
jump m always
jump n always
jump o always
jump p always
jump q always
jump r always
jump s always
jump t always
jump u always
jump v always
jump w always
jump x always
jump y always
jump z always
jump OCBracket always
jump VBar always
jump CCBracket always
jump Tilde always
jump End always

End:

op add currentX currentX 1
jump NoNewLine lessThan currentX MAX_CHAR_PER_LINE
	set currentX 0
	jump NewlineSkip2 equal isPrintLoop true
	jump PrintLoopStart always
	NewlineSkip2:
	jump NoNewLine equal isPrintLoop false
	op add currentY currentY 1
	op mul charY currentY CHAR_HEIGHT
	op add y1 charY 1
	op add y2 charY 2
	op add y3 charY 3
	op add y4 charY 4
	op add y5 charY 5
	op add y6 charY 6
	op add y7 charY 7
	op add y8 charY 8
	op add y9 charY 9
	op add y10 charY 10
NoNewLine:


op mul charX currentX CHAR_WIDTH
op add x1 charX 1
op add x2 charX 2
op add x3 charX 3
op add x4 charX 4
op add x5 charX 5

drawflush display1
jump TerminalLoop equal isPrintLoop false

op add i i 1
jump PrintLoop lessThan i TOTAL_CHAR_COUNT
set i 0
set isPrintLoop false
set currentY 0
set currentX 0

op mul charY currentY CHAR_HEIGHT
op add y1 charY 1
op add y2 charY 2
op add y3 charY 3
op add y4 charY 4
op add y5 charY 5
op add y6 charY 6
op add y7 charY 7
op add y8 charY 8
op add y9 charY 9
op add y10 charY 10

op mul charX currentX CHAR_WIDTH
op add x1 charX 1
op add x2 charX 2
op add x3 charX 3
op add x4 charX 4
op add x5 charX 5

jump TerminalLoop always

Tab:
	op add currentX currentX 3
jump End always
NewLine:
	jump NewlineSkip equal isPrintLoop true
	jump PrintLoopStart always
	NewlineSkip:
#	draw col BACKGROUND_COLOR
#	draw rect charX charY SCREEN_SIZE CHAR_HEIGHT
#	draw col FOREGROUND_COLOR
#	set currentX -1
#	op add currentY currentY 1
#	op mul charY currentY CHAR_HEIGHT
#	op add y1 charY 1
#	op add y2 charY 2
#	op add y3 charY 3
#	op add y4 charY 4
#	op add y5 charY 5
#	op add y6 charY 6
#	op add y7 charY 7
#	op add y8 charY 8
#	op add y9 charY 9
#	op add y10 charY 10
jump End always
Exclamation:
	draw poly x3 y1 4 1
	draw line x3 y4 x3 y10
jump End always
Quote:
	draw line x1 y6 x3 y10
	draw line x3 y6 x5 y10
jump End always
Hash:
	draw line x2 y1 x2 y10
	draw line x4 y1 x4 y10
	draw line x1 y4 x5 y4
	draw line x1 y7 x5 y7
jump End always
Dollar:
    draw line charX charY x5 y4
    draw line x5 y4 charX y6
    draw line charX y6 x5 y10
    draw line x3 y1 x3 y10
jump End always
Percent:
	draw line charX charY x5 y10
	draw poly x2 y8 4 1
	draw poly x4 y2 4 1
jump End always
And:
	draw line x2 y1 x3 y1
	draw line x1 y2 x1 y4
	draw line x3 y1 x5 y4
	draw line x5 charY x1 y5
	draw line x2 y6 x3 y6
	draw line x1 y7 x1 y9
	draw line x2 y10 x3 y10
	draw line x4 y7 x4 y9

jump End always
Apostrophe:
	draw line x2 y6 x4 y10
jump End always
OParen:
	draw line x4 charY x2 y2
	draw line x2 y3 x2 y8
	draw line x2 y8 x4 y10
jump End always
CParen:
	draw line x4 y3 x1 charY
	draw line x4 y7 x4 y3
	draw line x4 y7 x1 y10
jump End always
Asterix:
	draw line x1 y5 x3 y10
	draw line x2 y10 x4 y5
	draw line x1 y9 x5 y9
jump End always
Plus:
	draw line x3 y4 x3 y8
	draw line x1 y6 x5 y6
jump End always
Comma:
	draw line x2 charY x4 y4
jump End always
Minus:
	draw line x1 y6 x5 y6
jump End always
Period:
	draw poly x3 y1 4 1
jump End always
BSlash:
	draw line charX charY x5 y10
jump End always
Zero:
	draw line x2 y1 x4 y1
	draw line x1 y2 x1 y9
	draw line x2 y10 x4 y10
	draw line x5 y2 x5 y9
	draw line x1 y1 x4 y9
jump End always
One:
	draw line x1 y1 x5 y1
	draw line x3 y1 x3 y10
	draw line x3 y10 x1 y8
jump End always
Two:
	draw line x1 y1 x5 y1
	draw line x1 y1 x5 y9
	draw line x1 y10 x4 y10
jump End always
Three:
	draw line x1 y1 x4 y1
	draw line x5 y2 x5 y5
	draw line x3 y6 x4 y6
	draw line x4 y6 x5 y9
	draw line x1 y10 x4 y10
jump End always
Four:
	draw line x5 y1 x5 y10
	draw line x1 y6 x5 y6
	draw line x1 y6 x1 y10
jump End always
Five:
	draw line x1 y1 x4 y1
	draw line x5 y2 x5 y5
	draw line x1 y6 x4 y6
	draw line x1 y6 x1 y10
	draw line x1 y10 x5 y10
jump End always
Six:
	draw line x2 y1 x4 y1
	draw line x5 y2 x5 y5
	draw line x1 y2 x1 y9
	draw line x1 y6 x4 y6
	draw line x2 y10 x4 y10
jump End always
Seven:
	draw line x1 y10 x5 y10
	draw line x2 charY x5 y10
jump End always
Eight:
	draw line x2 y1 x4 y1
	draw line x1 y2 x1 y5
	draw line x5 y2 x5 y5
	draw line x2 y6 x4 y6
	draw line x1 y7 x1 y9
	draw line x5 y7 x5 y9
	draw line x2 y10 x4 y10
jump End always
Nine:
	draw line x2 y1 x4 y1
	draw line x5 y2 x5 y9
	draw line x2 y6 x5 y6
	draw line x1 y7 x1 y9
	draw line x5 y7 x5 y9
	draw line x2 y10 x4 y10
jump End always
Colon:
	draw poly x3 y6 4 1
	draw poly x3 y3 4 1
jump End always
SemiColon:
	draw poly x3 y6 4 1
	draw line x1 charY x3 y4
jump End always
GreaterThan:
	draw line charX y5 x5 y8
	draw line charX y6 x5 y3
jump End always
Equal:
	draw line x1 y5 x5 y5
	draw line x1 y7 x5 y7
jump End always
LessThan:
	draw line charX y8 x5 y5
	draw line charX y3 x5 y6
jump End always
Question:
	draw line x1 y10 x4 y10
	draw line x5 y9 x5 y7
	draw line x3 y5 x5 y7
	draw line x3 y4 x3 y5
	draw line x3 y1 x3 y2
jump End always
At:
	draw line x2 y1 x4 y1
	draw line x1 y2 x1 y9
	draw line x2 y10 x4 y10
	draw line x5 y9 x5 y4
	draw line x3 y4 x5 y4
	draw line x3 y4 x3 y7
jump End always
A:
	draw line charX charY x3 y10
	draw line x2 y10 x5 charY
	draw line x2 y4 x4 y4
jump End always
B:
	draw line x1 y1 x1 y10
	draw line x1 y1 x4 y1
	draw line x5 y2 x5 y5
	draw line x1 y6 x4 y6
	draw line x5 y7 x5 y9
	draw line x1 y10 x4 y10
jump End always
C:
	draw line x2 y1 x5 y1
	draw line x1 y2 x1 y9
	draw line x2 y10 x5 y10
jump End always
D:
	draw line x1 y1 x1 y10
	draw line x1 y1 x4 y1
	draw line x1 y10 x4 y10
	draw line x5 y2 x5 y9
jump End always
E:
	draw line x1 y1 x1 y10
	draw line x1 y1 x5 y1
	draw line x1 y10 x5 y10
	draw line x1 y6 x4 y6
jump End always
F:
	draw line x1 y1 x1 y10
	draw line x1 y10 x5 y10
	draw line x1 y6 x4 y6
jump End always
G:
	draw line x1 y2 x1 y9
	draw line x2 y1 x4 y1
	draw line x2 y10 x5 y10
	draw line x5 y2 x5 y6
	draw line x4 y6 x5 y6
jump End always
H:
	draw line x1 y1 x1 y10
	draw line x5 y1 x5 y10
	draw line x1 y6 x5 y6
jump End always
I:
	draw line x1 y1 x5 y1
	draw line x3 y1 x3 y10
	draw line x1 y10 x5 y10
jump End always
J:
	draw line x2 y1 x4 y1
	draw line x5 y2 x5 y10
	draw line x1 y2 x1 y3
jump End always
K:
	draw line x1 y1 x1 y10
	draw line x1 y5 x5 y9
	draw line x5 y9 x5 y10
	draw line x1 y6 x5 y2
	draw line x5 y3 x5 y1
jump End always
L:
	draw line x1 y1 x1 y10
	draw line x1 y1 x5 y1
jump End always
M:
	draw line x1 y1 x1 y10
	draw line x5 y1 x5 y10
	draw line charX y10 x3 y6
	draw line x5 y10 x2 y6
jump End always
N:
	draw line x1 y1 x1 y10
	draw line x5 y1 x5 y10
	draw line charX y10 x5 charY
jump End always
O:
	draw line x1 y2 x1 y9
	draw line x2 y1 x4 y1
	draw line x2 y10 x4 y10
	draw line x5 y2 x5 y9
jump End always
P:
	draw line x1 y1 x1 y10
	draw line x1 y10 x4 y10
	draw line x1 y6 x4 y6
	draw line x5 y7 x5 y9
jump End always
Q:
	draw line x1 y2 x1 y9
	draw line x2 y1 x4 y1
	draw line x2 y10 x4 y10
	draw line x5 y2 x5 y9
	draw line x3 y2 x5 charY
jump End always
R:
	draw line x1 y1 x1 y10
	draw line x1 y10 x4 y10
	draw line x1 y6 x4 y6
	draw line x5 y7 x5 y9
	draw line x2 y6 x5 y3
	draw line x5 y3 x5 y1
jump End always
S:
	draw line x1 y1 x4 y1
	draw line x5 y2 x5 y5
	draw line x2 y6 x4 y6
	draw line x1 y7 x1 y9
	draw line x2 y10 x5 y10
jump End always
T:
	draw line x3 y1 x3 y10
	draw line x1 y10 x5 y10
jump End always
U:
	draw line x1 y2 x1 y10
	draw line x2 y1 x4 y1
	draw line x5 y2 x5 y10
jump End always
V:
	draw line charX y10 x3 charY
	draw line x5 y10 x2 charY
jump End always
W:
	draw line x1 y10 x1 y1
	draw line x5 y10 x5 y1
	draw line charX y1 x3 y4
	draw line x5 y1 x2 y4
jump End always
X:
	draw line charX charY x5 y10
	draw line charX y10 x5 charY
jump End always
Y:
	draw line x3 y1 x3 y6
	draw line x3 y5 charX y10
	draw line x2 y5 x5 y10
jump End always
Z:
	draw line x1 y1 x5 y1
	draw line x1 y10 x5 y10
	draw line charX charY x5 y10
jump End always
OBracket:
	draw line x2 y1 x2 y10
	draw line x2 y1 x4 y1
	draw line x2 y10 x4 y10
jump End always
FSlash:
	draw line charX y10 x5 charY
jump End always
CBracket:
	draw line x4 y1 x4 y10
	draw line x2 y1 x4 y1
	draw line x2 y10 x4 y10
jump End always
Caret:
	draw line charX y6 x3 y10
	draw line x5 y6 x2 y10
jump End always
UScore:
	draw line x1 y1 x5 y1
jump End always
BTick:
	draw line x2 y10 x4 y8
jump End always
a:
	draw line x2 y1 x5 y1
	draw line x1 y2 x1 y3
	draw line x5 y1 x5 y5
	draw line x2 y4 x5 y4
	draw line x1 y6 x4 y5
jump End always
b:
	draw line x1 y1 x1 y10
	draw line x1 y1 x4 y1
	draw line x1 y6 x4 y6
	draw line x5 y2 x5 y5
jump End always
c:
	draw line x2 y1 x5 y1
	draw line x1 y2 x1 y5
	draw line x2 y6 x5 y6
jump End always
d:
	draw line x5 y1 x5 y10
	draw line x2 y1 x5 y1
	draw line x2 y6 x5 y6
	draw line x1 y2 x1 y5
jump End always
e:
	draw line x2 y1 x4 y1
	draw line x1 y2 x1 y5
	draw line x2 y6 x4 y6
	draw line x5 y5 x5 y4
	draw line x1 y4 x5 y4
jump End always
f:
	draw line x3 y1 x3 y9
	draw line x1 y6 x5 y6
	draw line x4 y10 x5 y10
jump End always
g:
	draw line x2 y1 x4 y1
	draw line x2 y3 x4 y3
	draw rect charX y1 1 1
	draw rect x4 y1 1 1
	draw rect charX y3 1 1
	draw rect x3 y8 1 1
	draw linePoly x2 y6 4 2
jump End always
h:
	draw line x1 y1 x1 y10
	draw line x1 y6 x4 y6
	draw line x5 y1 x5 y5
jump End always
i:
	draw line x1 y1 x5 y1
	draw line x3 y1 x3 y6
	draw line x2 y6 x3 y6
	draw line x3 y8 x3 y9
jump End always
j:
	draw line x1 y1 x3 y1
	draw line x3 y1 x3 y6
	draw line x2 y6 x3 y6
	draw line x3 y8 x3 y9
jump End always
k:
	draw line x1 y1 x1 y10
	draw line x1 y4 x5 charY
	draw line x1 y3 x5 y7
jump End always
l:
	draw line x1 y1 x5 y1
	draw line x3 y1 x3 y9
	draw line x2 y9 x3 y9
jump End always
m:
	draw line x1 y1 x1 y6
	draw line x1 y6 x2 y6
	draw line x3 y1 x3 y5
	draw line x5 y1 x5 y5
	draw rect x3 y5 1 1
jump End always
n:
	draw line x1 y1 x1 y6
	draw line x1 y6 x4 y6
	draw line x5 y1 x5 y5
jump End always
o:
	draw line x2 y1 x4 y1
	draw line x1 y2 x1 y5
	draw line x2 y6 x4 y6
	draw line x5 y2 x5 y5
jump End always
p:
	draw line x1 y1 x1 y8
	draw line x1 y5 x4 y5
	draw line x1 y8 x4 y8
	draw line x5 y6 x5 y7
jump End always
q:
	draw line x5 y1 x5 y8
	draw line x5 y5 x2 y5
	draw line x5 y8 x2 y8
	draw line x1 y6 x1 y7
jump End always
r:
	draw line x1 y1 x1 y6
	draw line x3 y6 x5 y6
	draw rect x1 y4 1 1
jump End always
s:
	draw line x1 y1 x4 y1
	draw line x5 y2 x5 y3
	draw line x2 y4 x4 y4
	draw rect charX y4 1 1
	draw line x2 y6 x5 y6
jump End always
t:
	draw line x3 y2 x3 y8
	draw line x2 y6 x4 y6
	draw rect x3 charY 1 1
jump End always
u:
	draw line x1 y2 x1 y6
	draw line x2 y1 x4 y1
	draw line x5 y2 x5 y6
jump End always
v:
	draw line charX y6 x3 charY
	draw line x2 charY x5 y6
jump End always
w:
	draw line x1 y2 x1 y6
	draw line x3 y2 x3 y3
	draw line x5 y2 x5 y6
	draw rect x1 charY 1 1
	draw rect x3 charY 1 1
jump End always
x:
	draw line charX charY x5 y5
	draw line x5 charY charX y5
jump End always
y:
	draw line x2 y1 x4 y1
	draw line x5 y2 x5 y10
	draw line x2 y6 x5 y6
	draw line x1 y7 x1 y10
jump End always
z:
	draw line x1 y1 x5 y1
	draw line x1 y5 x5 y5
	draw line x1 y1 x5 y5
jump End always
OCBracket:
	draw line x3 y2 x3 y9
	draw line x2 y5 x2 y6
	draw rect x3 charY 1 1
	draw rect x3 y9 1 1
jump End always
VBar:
	draw line x3 y1 x3 y10
jump End always
CCBracket:
	draw line x3 y2 x3 y9
	draw line x4 y5 x4 y6
	draw rect x1 charY 1 1
	draw rect x1 y9 1 1
jump End always
Tilde:
	draw rect charX y5 1 1
	draw rect x4 y5 1 1
	draw line x1 y7 x4 y4
jump End always